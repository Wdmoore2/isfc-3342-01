/*! HTML5 Boilerplate v9.0.0-RC1 | MIT License | https://html5boilerplate.com/ */

/* main.css 3.0.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
  html {
    color: #1B2838;
    font-size: 1em;
    line-height: 1.4;
  }
  
  body {
    font-family: "Bowlby One", sans-serif;
  
  }
  img {
   max-width: 100%;
  border-radius: 50%;
   width: 200px;
  height: 300px;
}
header {
  background-color: #2C3E50;
}
.personal
{
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding: 20px;
}
  
  .container  {
    background: rgb(107,154,196);
background: radial-gradient(circle, rgba(107,154,196,1) 0%, rgba(80,113,147,0.5690870098039216) 100%);
    border: 1px solid #2C3E50;
    border-radius: 5px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
    margin: 0 auto;
  
  }
  
  nav ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    padding: 20px 20px 0px 20px;
  }
  
  nav ul li {
    list-style-type: none;
    text-align: center;
  }
  
  nav a:link, nav a:visited {
    display: block;
    padding: 8px 16px;
    border: 1px solid #000;
    text-align: center;
    text-decoration: none;
    color: #2C3E50;
    text-transform: uppercase;
    font-size: 0.75em;
    background: rgba(0, 0, 0, 0.65);
    transition: background-color 0.5s ease;
    color: #ffffff;
  }
  
  nav a:hover {
    background: rgba(0, 0, 0, 0.95);
  }
  
  
  main h1 {
    display: flex;
    flex-direction: row;
    justify-content: center;
    text-align: center;
    font-weight: 400;
    font-variant: small-caps;
  }
  
  main h1:before,
  main h1:after {
    background-color: var(--accent-color-1);
    content: "\a0";
    height: 1px;
    position: relative;
    top: 1.6rem;
  }
  
  main h1:before {
    margin-right: 5px;
  }
  
  main h1:after {
    margin-left: 5px;
  }
  
  dl {
    display: grid;
    grid-template: repeat(8, auto) / 8em 1fr;
    font-size:.9rem;
  }
  
  dt {
    font-weight: 800;
    grid-column: 1;
    padding: 10px 0;
    border-bottom: 1px solid var(--accent-color-1);
  }
  
  dd {
    margin: 0;
    grid-column: 2;
    padding: 10px 0;
    border-bottom: 1px solid var(--accent-color-1);
  }
  
  ul {
    list-style-type: none;
}
.related-links {
  display: flex;
  justify-content: center;
  list-style: none;
  padding: 0;
  gap:20px;
}

.related-links a {
  border: 1px;
  padding: 8px 16px;
  text-align: center;
  text-decoration: none;
  color: #222222;
  text-transform: uppercase;
  font-size: 0.75em;
  background: rgba(0, 0, 0, 0.65);
  transition: background-color 0.5s ease;
  color: #fff;
}

.related-links .svg-inline--fa {
  font-size: 1.8em;
  padding-top: 7px;
}

.related-links a:hover {
  background: rgba(0, 0, 0, 0.95);
}
#objective {
  display: grid;
  grid-template-columns: 2fr 2fr;
}
#skills li {
  list-style-type: square;
}


.job,
.certificate {
  border-bottom: 1px solid;
  padding-bottom: 20px;
}

.job *[itemprop="jobTitle"],
.job *[itemprop="name"],
.job *[itemprop="url"],
.job *[itemprop="addressLocality"],
.certificate *[itemprop="name"] {
  display: block;
}

.job h3 {
  margin: 20px 0 0 0;
}

footer {
  text-align: center;
  padding: 20px 0;
}

.page-title {
  grid-area: title;

  
}

#about {
  grid-area: about;
}
#skills {
  grid-area: skills;
}
#experience {
  grid-area: experience;
}
#education {
  grid-area: education;
}



/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

/* ==========================================================================
   Helper classes
   ========================================================================== */


/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .visually-hidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * The use of `table` rather than `block` is only necessary if using
 * `::before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: "";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}


@media only screen and (min-width: 768px) {
  main.container {
    max-width: 900px;
  }
  header.container {
    max-width: 900px;
  }
  #skills {
    padding-left: calc(30% + 40px);
  }
  #experience {
    padding-left: calc(30% + 40px);
  }
  #education {
    padding-left: calc(30% + 40px);
  }
  #about {
    display: flex;
    flex-flow: row wrap;
  }

  .bio {
    flex: 1 30%;
  }
  .details {
    flex: 1 70%;
    padding-left: 40px;
  }
  .related-links {
    border-bottom: 1px solid #999;
    padding-bottom: 50px;
    flex: 1;
  }
}

@media screen and (min-width:992px) {

}

 


 

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

